{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","clearHandler","setState","buttonClickHandler","e","good","button","currentTarget","dataset","cy","selectedRow","parentElement","classList","remove","textContent","add","selectedGoodRow","document","querySelector","children","_prevProps","prevState","prevGood","prevSelectedGoodRow","indexOf","this","className","type","onClick","map","Component","ReactDOM","render","getElementById"],"mappings":"2OAIaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAyB,CACvBC,aAAcH,EAAM,IAFxB,EAwCEI,aAAe,WACb,EAAKC,SAAS,CAAEF,aAAc,MAzClC,EA4CEG,mBAAqB,SACnBC,EACAC,GAEA,IAAMC,EAASF,EAAEG,cAEjB,GAA0B,iBAAtBD,EAAOE,QAAQC,GAAuB,CAAC,IAAD,EAClCC,EAAW,UAAGN,EAAEG,cAAcI,qBAAnB,aAAG,EAA+BA,cAE/CD,GACFA,EAAYE,UAAUC,OAAO,gCAG/BP,EAAOE,QAAQC,GAAK,YACpBH,EAAOM,UAAUC,OAAO,WACxBP,EAAOQ,YAAc,IACrB,EAAKZ,SAAS,CAAEF,aAAc,UACzB,GAA0B,cAAtBM,EAAOE,QAAQC,GAAoB,CAAC,IAAD,EACtCC,EAAW,UAAGN,EAAEG,cAAcI,qBAAnB,aAAG,EAA+BA,cAE/CD,GACFA,EAAYE,UAAUG,IAAI,gCAG5BT,EAAOE,QAAQC,GAAK,eACpBH,EAAOM,UAAUG,IAAI,WACrBT,EAAOQ,YAAc,IACrB,EAAKZ,SAAS,CAAEF,aAAcK,MAvEpC,uDAKE,WAAqB,IAAD,EACZW,EAAe,UAAGC,SAASC,cAAc,gBAA1B,aAAG,EAAiCC,SAAS,GAElE,GAAIH,EAAiB,CAAC,IAAD,EACnBA,EAAgBJ,UAAUG,IAAI,gCAC9B,IAAMT,EAAM,UAAGU,EAAgBG,SAAS,UAA5B,aAAG,EAA6BA,SAAS,GAEjDb,IACDA,EAAuBE,QAAQC,GAAK,eACrCH,EAAOM,UAAUG,IAAI,WACrBT,EAAOQ,YAAc,QAf7B,gCAoBE,SACEM,EACAC,GACO,IAAD,EACAC,EAAWD,EAAUrB,aACrBuB,EAAmB,UACvBN,SAASC,cAAc,gBADA,aACvB,EAAiCC,SAAStB,EAAM2B,QAAQF,IAE1D,GAAIC,EAAqB,CAAC,IAAD,EACJ,OAAnBA,QAAmB,IAAnBA,KAAqBX,UAAUC,OAAO,gCACtC,IAAMP,EAAM,UAAGiB,EAAoBJ,SAAS,UAAhC,aAAG,EAAiCA,SAAS,GAErDb,IACDA,EAAuBE,QAAQC,GAAK,YACrCH,EAAOM,UAAUC,OAAO,WACxBP,EAAOQ,YAAc,QAnC7B,oBA2EE,WAAU,IAAD,OACCd,EAAiByB,KAAK1B,MAAtBC,aAER,OACE,uBAAM0B,UAAU,oBAAhB,WACI1B,GAAgB,oBAAI0B,UAAU,QAAd,+BAEjB1B,GACC,qBAAI0B,UAAU,sCAAd,oBACM1B,EADN,gBAGGA,GACC,wBACE,UAAQ,cACR2B,KAAK,SACLD,UAAU,cACVE,QAASH,KAAKxB,aACd,aAAW,uBAMnB,uBAAOyB,UAAU,QAAjB,SACE,gCACG7B,EAAMgC,KAAI,SAACxB,GAAD,OACT,qBAAI,UAAQ,OAAZ,UACE,6BACE,wBACE,UAAQ,YACRsB,KAAK,SACLD,UAAU,SACVE,QAAS,SAACxB,GACR,EAAKD,mBAAmBC,EAAGC,IAL/B,iBAYF,oBAAI,UAAQ,YAAYqB,UAAU,eAAlC,SACGrB,MAfmBA,iBArGtC,GAAyByB,aClBzBC,IAASC,OACP,cAAC,EAAD,IACAf,SAASgB,eAAe,W","file":"static/js/main.0dad337c.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    selectedGood: goods[8],\n  };\n\n  componentDidMount() {\n    const selectedGoodRow = document.querySelector('tbody')?.children[8];\n\n    if (selectedGoodRow) {\n      selectedGoodRow.classList.add('has-background-success-light');\n      const button = selectedGoodRow.children[0]?.children[0];\n\n      if (button) {\n        (button as HTMLElement).dataset.cy = 'RemoveButton';\n        button.classList.add('is-info');\n        button.textContent = '-';\n      }\n    }\n  }\n\n  componentDidUpdate(\n    _prevProps: Readonly<{}>,\n    prevState: Readonly<State>,\n  ): void {\n    const prevGood = prevState.selectedGood;\n    const prevSelectedGoodRow\n    = document.querySelector('tbody')?.children[goods.indexOf(prevGood)];\n\n    if (prevSelectedGoodRow) {\n      prevSelectedGoodRow?.classList.remove('has-background-success-light');\n      const button = prevSelectedGoodRow.children[0]?.children[0];\n\n      if (button) {\n        (button as HTMLElement).dataset.cy = 'AddButton';\n        button.classList.remove('is-info');\n        button.textContent = '+';\n      }\n    }\n  }\n\n  clearHandler = () => {\n    this.setState({ selectedGood: '' });\n  };\n\n  buttonClickHandler = (\n    e: React.MouseEvent<HTMLButtonElement>,\n    good: string,\n  ) => {\n    const button = e.currentTarget;\n\n    if (button.dataset.cy === 'RemoveButton') {\n      const selectedRow = e.currentTarget.parentElement?.parentElement;\n\n      if (selectedRow) {\n        selectedRow.classList.remove('has-background-success-light');\n      }\n\n      button.dataset.cy = 'AddButton';\n      button.classList.remove('is-info');\n      button.textContent = '+';\n      this.setState({ selectedGood: '' });\n    } else if (button.dataset.cy === 'AddButton') {\n      const selectedRow = e.currentTarget.parentElement?.parentElement;\n\n      if (selectedRow) {\n        selectedRow.classList.add('has-background-success-light');\n      }\n\n      button.dataset.cy = 'RemoveButton';\n      button.classList.add('is-info');\n      button.textContent = '-';\n      this.setState({ selectedGood: good });\n    }\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        {!selectedGood && <h1 className=\"title\">No goods selected</h1>}\n\n        {selectedGood && (\n          <h1 className=\"title is-flex is-align-items-center\">\n            {`${selectedGood} is selected`}\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            {selectedGood && (\n              <button\n                data-cy=\"ClearButton\"\n                type=\"button\"\n                className=\"delete ml-3\"\n                onClick={this.clearHandler}\n                aria-label=\"Clear selection\"\n              />\n            )}\n          </h1>\n        )}\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map((good) => (\n              <tr data-cy=\"Good\" key={good}>\n                <td>\n                  <button\n                    data-cy=\"AddButton\"\n                    type=\"button\"\n                    className=\"button\"\n                    onClick={(e) => {\n                      this.buttonClickHandler(e, good);\n                    }}\n                  >\n                    +\n                  </button>\n                </td>\n\n                <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                  {good}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}